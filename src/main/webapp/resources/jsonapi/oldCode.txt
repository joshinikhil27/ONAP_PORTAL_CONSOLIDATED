app.controller('persistCtrl',function($scope,$http,$filter,$rootScope,$state){
	$scope.dataNew = [];
	$scope.colorCode = [{'pass':'bk-success'},{'fail':'bk-danger'},{'slow':'bk-amber'},{'memoryLeak':'bk-dark'},{'diskFull':'bk-brand'},{'systemFaliure':'bk-blue'}];
	$scope.custColor = ['#93c54b','#d9534f','#FFC200','#222','#37a6c4','##0010ce']
	
    function StatusCount(){
        $http.get('resources/jsonapi/statuscount.json')
        .then(function(res){
            $scope.statusCount = res.data.count;
            //$scope.colorClass = res.data.color;
               console.log('statuscount '+JSON.stringify($scope.statusCount));
               $scope.dataNew = [{"date":"2017-09-18T07:47:48.057Z","cpu":"3.8","Memory":"6.3","Network":"8","Disk":"9","NumUsers":"6","Noconnections":"5","Result":"slow","Link1":"Restart","Link2":"Raise_Alarm","Link3":"None","id":{"counter":1,"date":"2017-09-18T07:47:48.040Z","machineIdentifier":0,"processIdentifier":0,"time":0,"timeSecond":0,"timestamp":0}},{"date":"2017-09-18T07:47:48.057Z","cpu":"8.1","Memory":"8.2","Network":"6.4","Disk":"8.2","NumUsers":"9","Noconnections":"8","Result":"pass","Link1":"Restart","Link2":"Raise_Alarm","Link3":"None","id":{"counter":2,"date":"2017-09-18T07:47:48.040Z","machineIdentifier":0,"processIdentifier":0,"time":0,"timeSecond":0,"timestamp":0}},{"date":"2017-09-19T07:47:48.057Z","cpu":"6.3","Memory":"5.4","Network":"3.7","Disk":"7.4","NumUsers":"8","Noconnections":"9","Result":"fail","Link1":"Restart","Link2":"Raise_Alarm","Link3":"None","id":{"counter":3,"date":"2017-09-18T07:47:48.040Z","machineIdentifier":0,"processIdentifier":0,"time":0,"timeSecond":0,"timestamp":0}},{"date":"2017-09-19T08:30:48.057Z","cpu":"7.1","Memory":"6.3","Network":"2.8","Disk":"4","NumUsers":"8","Noconnections":"5","Result":"fail","Link1":"Restart","Link2":"Raise_Alarm","Link3":"None","id":{"counter":4,"date":"2017-09-18T07:47:48.040Z","machineIdentifier":0,"processIdentifier":0,"time":0,"timeSecond":0,"timestamp":0}},{"date":"2017-09-19T09:30:48.057Z","cpu":"5.4","Memory":"6.3","Network":"9","Disk":"6.1","NumUsers":"5","Noconnections":"9","Result":"fail","Link1":"None","Link2":"None","Link3":"None","id":{"counter":5,"date":"2017-09-18T07:47:48.040Z","machineIdentifier":0,"processIdentifier":0,"time":0,"timeSecond":0,"timestamp":0}},{"date":"2017-09-19T10:30:48.057Z","cpu":"4.9","Memory":"5.4","Network":"2.8","Disk":"3.3","NumUsers":"2","Noconnections":"5","Result":"fail","Link1":"None","Link2":"None","Link3":"None","id":{"counter":6,"date":"2017-09-18T07:47:48.040Z","machineIdentifier":0,"processIdentifier":0,"time":0,"timeSecond":0,"timestamp":0}}];
               $scope.getdata('All');
        });
    };
    StatusCount();
    
    var margin = {top: 10, right: 80, bottom: 30, left: 35},
    width = 340 - margin.left - margin.right,
    height = 150 - margin.top - margin.bottom;
    
    var x = d3.time.scale()
    .range([0, width]);

    var y = d3.scale.linear()
        .range([height, 0]);
    
    //var color = d3.scale.category10();
    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom").ticks(4)
        .tickFormat(d3.time.format("%I:%M")); //d3.time.format("%H:%M")
     
    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left").ticks(5);
    
    var line = d3.svg.line()
        .x(function(d) { return x(d.date); })
        .y(function(d) { return y(d.temperature); }); 
    
//var parseDate = d3.time.format("%Y%m%d %H:%M").parse;
var parseDate = d3.time.format.utc("%Y-%m-%dT%H:%M:%S.%LZ").parse;

var formatDate = d3.time.format("%H")

var color = d3.scale.category10();
var svg;
//$scope.custColor = ['#0099CC','#51A39D','#B7695C','#CDBB79','#F20075','#93228D','#FF0000','#FFC200']
$scope.legendData = [];
$scope.selectedList = [];
$scope.selectedDate = [];
$scope.opttype = {
    selected : "All"
}
$scope.charttype = {
    selected : "Line"
}
$scope.networktype = {
    selected : "All"
}
function checkboxFunctionality(type,calltype){
    /* Below code for selected grid data highlited */
    if(calltype == 1){
        $scope.temp = [];
      var indexOfDate = $scope.selectedDate.indexOf(type); 
        if(indexOfDate === -1) {
            $scope.selectedDate.push(type);
        } else {
            $scope.selectedDate.splice(indexOfDate, 1)
        }
        $scope.max = Math.max.apply(Math,$scope.selectedDate.map(function(item){return item;}));
        for(i=0;i <= $scope.max;i++){
             indexOfDate = $scope.selectedDate.indexOf(i);
             if(indexOfDate === -1){
                $scope.temp[i] = false;
             }else{
                 $scope.temp[i] = true;
             }
        }
    }
    /******************** END CODE********************** */   
}
$scope.graphnum = [1,2,3,4,5,6];
var vars = {}
$scope.name = 'fail';

$scope.getCount = function(count,name){
    $scope.name = name;
     $scope.getdata('All');
}

$scope.getdata = function(type,calltype) {
    var ddltype = $scope.opttype.selected;
    var network = $scope.networktype.selected;
    checkboxFunctionality(type,calltype);
    
    angular.forEach($scope.graphnum,function(value,key){
         $('#graph' + key).html('');
         /* Generate d3 graph on canvas */
            vars['svg' + key] = d3.select("#graph"+key).append("svg")
                .attr("width", width + margin.left + margin.right)
                .attr("height", height + margin.top + margin.bottom)
                .append("g")
                .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
            /*********************** END CODE*********************** */
    });
    
    
    /** Read CSV file using d3 functionality */
    var newData = [];
    var data = [];
    d3.csv("resources/jsonapi/book2.csv", function(error, data2) {
    	var data1 = angular.copy($scope.dataNew);
    	console.log('NEW '+ JSON.stringify(data1));
        angular.forEach(data1,function(value,key){
            if(value.Result == $scope.name){
                data.push(data1[key]);
            }
        });
        if(data.length == 0){
            data= angular.copy(data1);
        }
        
        color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));
        data.forEach(function(d) {
           d.date = parseDate(d.date);
        });  
        
        /*********************** END CODE*********************** */
        $scope.selectedList = ["cpu","Memory","Network","Disk","NumUsers","Noconnections"];
        $scope.tempList = ["cpu","Memory","Network","Disk","NumUsers","Noconnections"];
        /** Filter data by using legend check boxes */
        angular.forEach($scope.selectedList,function(value,key){
            newData = angular.copy(data);
            angular.forEach(newData,function(value1,key1){
                angular.forEach($scope.tempList,function(value2,key2){
                    if(value2 != value){
                        delete newData[key1][value2];
                    }
                }); 
            });
            filterDate(newData,ddltype,key,data,value);
        });
    });
};

/** Init function */
//$scope.getdata('All');

/** Filter data date wise for display graph */
function filterDate(data,type,grpkey,orgdata,yAxisName){
    var newdata = [];
    $scope.tabledata = [];
    var date = $filter('date')(new Date(), 'shortDate');
        if(type == 'Today'){
            angular.forEach(data,function(value,key){
                var dt = $filter('date')(value.date, 'shortDate');
                if(dt == date){
                    newdata.push(value);
                }
            });
        }else if(type == 'LW'){
            var startDate = moment().subtract(1, 'week').startOf('week');
            var endDate = moment().subtract(1, 'week').endOf('week');
            
            var WS = $filter('date')(new Date(startDate), 'shortDate'); 
            var WStart = new Date(WS).getTime();
            var WE = $filter('date')(new Date(endDate), 'shortDate');
            var WEnd = new Date(WE).getTime();
            
            angular.forEach(data,function(value,key){
                var dt = $filter('date')(value.date, 'shortDate');
                var gdate = new Date(dt).getTime();
                if(WStart <= gdate && WEnd >= gdate){
                    newdata.push(value);
                }
            });
        }else if(type == 'LM'){
            var dateFrom = moment().subtract(1, 'months').startOf('month').format('YYYY-MM-DD');
            var dateTo = moment().subtract(1, 'months').endOf('month').format('YYYY-MM-DD');
            
            var WS = $filter('date')(new Date(dateFrom), 'shortDate'); 
            var WStart = new Date(WS).getTime();
            var WE = $filter('date')(new Date(dateTo), 'shortDate');
            var WEnd = new Date(WE).getTime();

            angular.forEach(data,function(value,key){
                var dt = $filter('date')(value.date, 'shortDate');
                var gdate = new Date(dt).getTime();
                if(WStart <= gdate && WEnd >= gdate){
                    newdata.push(value);
                }
            });
        }else{
            newdata = angular.copy(data);
        } 
//        angular.forEach(orgdata,function(value,key){
//            if(newdata.indexOf(key) === -1){
//             console.log('Same');
//            }else{
//                console.log('Not Same');
//            }
//        });

        if(newdata.length > 0){
            $scope.tabledata = angular.copy(orgdata);
        }
        /** Remove ID column (ID column used only for edit grid rows) */
        angular.forEach(newdata,function(value,key){
            delete newdata[key]['id'];
        });
        $scope.header =[];
        angular.forEach(orgdata,function(value,key){
            if(key == 0){
                angular.forEach(value,function(value1,key1){
                    if(key1 != 'id')
                        $scope.header.push(key1);
                });
            }
        });
        /*********************** END CODE*********************** */
        showNetworkGraph(newdata,grpkey,yAxisName);
        $scope.$apply(); 
};

$scope.modaldata;
function showNetworkGraph(data,grpkey,yAxisName){
    var charttype = $scope.charttype.selected;
    var dataArray = [];
      var monitor  = color.domain().map(function(name) {
        return {
            name: name,
            values: data.map(function(d) {
                dataArray.push(+d[name]);
                return {date: d.date,temperature: +d[name]};
            })
        };
      });

      x.domain(d3.extent(data, function(d) { return d.date; }));

      y.domain([
        d3.min(monitor , function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
        d3.max(monitor , function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
      ]);
      // Define the div for the tooltip
var div = d3.select("body").append("div")   
    .attr("class", "tooltip")               
    .style("opacity", 0);
    
      vars['svg' + grpkey].append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis)
          .append("text")
          .attr("x", width)
          .attr("dx", ".91em")
          .style("text-anchor", "end")
          .text("Time");

      vars['svg' + grpkey].append("g")
          .attr("class", "y axis")
          .call(yAxis)
          .append("text")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("dy", ".71em")
          .style("text-anchor", "end")
          .text(yAxisName);

      vars['city' + grpkey] = vars['svg' + grpkey].selectAll(".city")
          .data(monitor)
          .enter().append("g")
          .attr("class", "city");

      if(charttype == "Line"){    
          vars['city' + grpkey].append("path")
            .attr("class", "line")
            .attr("d", function(d,i) { 
                //console.log('Len '+d.values.length);
                //if(i < d.values.length){
                    //if(!isNaN(d.values[i].temperature)){
                        return line(d.values); 
                    //}
                //}
            })
            .style("stroke", function(d,j) { return $scope.custColor[j] });
      }
      vars['city' + grpkey].selectAll("circle")
        .data(function(d){
            return d.values;
         })   
        .enter()
        .append("circle")
        .attr("r", function(){
            if(charttype == "Line"){
                return 4;
            }else{
                return 6;
            }
        })
        .attr("cx", function(d) {
            if(!isNaN(d.temperature)){
                return x(d.date);   
                //return 15 + x(d.date);    // add extra 15 for increase the dist. btwn node and x-axis 
            }
        })
        .attr("cy", function(d) { 
            if(!isNaN(d.temperature)){
                return y(d.temperature);
            }
        })
        .style("fill", function(d,i,j) {
            if(!isNaN(d.temperature)){
                if($scope.tabledata[i].Result === 'Fail'){
                    return '#FF0000';
                }else if($scope.tabledata[i].Result === 'Slow'){
                    return "#FFC200";
                }else{
                    return $scope.custColor[j];
                } 
            }
        })
        .attr('class',function(d,i){
            if($scope.selectedDate.length > 0){
                if($scope.selectedDate.indexOf(i) === -1){
                    return 'white1';
                }else{
                    return 'white2';
                }
            }else{
                return 'white';
            }
        })
        .on('click',function(d,i){
            $scope.modaldata = angular.copy($scope.tabledata[i]);
            return $scope.modalPopup($scope.modaldata,i);
        })
        .on('mouseover',function(d,i){
            div.transition()        
                .duration(200)      
                .style("opacity", .9);      
            div.html($scope.tabledata[i][yAxisName])    
                .style("left", (d3.event.pageX) + "px")     
                .style("top", (d3.event.pageY - 34) + "px");
        })
        .on('mouseout',function(){
            div.transition()        
                .duration(500)      
                .style("opacity", 0);
        });
}
    $scope.modalPopup = function(data,i){
        if(data.Result == 'fail' || data.Result == 'slow'){
            var usrtInfo = {
                "date" : new Date(),
                "userid" : "587456",
                "username" : "abhijit"
            }
            //$rootScope.nodedata =[];
            $rootScope.nodedata = [{
                "userinfo" : usrtInfo,
                "nodeinfo" : $scope.tabledata[i]
            }];
            var html = '<h4> Network Result '+ data.Result + '</h4>';
            $('#myModal').modal('show');
            $('#my1').html(html);
        }
    }
    
    $scope.restartNetwork = function(){
        $('#myModal').modal('hide');
        $state.go('restartinfo');
    }
    
    function calltip(){ 
     alert('call');
    }
    
    //svg.call(tip);
})
.directive('modalPopup',function(){
        return {
            restrict : 'AE',
            scope : {
                modaldata : '=',
                btnclick : '&',
            },
            template : '<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">'
                + '<div class="modal-dialog modal-sm" role="document">'
                + '<div class="modal-content">'
                + '<div class="modal-body"> '
                + '<div style="padding: 20px 24px;" class="col-md-10"><div id="my1" style="text-transform: capitalize;"></div><h4 ng-click="btnclick()" style="color:#f49505;cursor : pointer">Please restart your VM</h4></div>'
                + '<div style="padding: 2px 14px;" class="col-md-2"><button type="button" class="btn btn-secondary" data-dismiss="modal">X</button></div>'
                + '</div>'
                + '<div class="modal-footer">'
                + ''
                + '</div>'
                + '</div>'
                + '</div>'
                + '</div>'
        };
});